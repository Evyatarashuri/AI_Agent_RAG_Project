version: "3.9"

services:
  flask_app:
    build:
      context: .
      dockerfile: Dockerfile.flask
    ports:
      - "8000:8000"
    depends_on:
      - ollama
      - chroma
      - mongo
    env_file:
      - .env
    environment:
      - MONGO_URI=${MONGO_URI}
      - CHROMA_COLLECTION_NAME=${CHROMA_COLLECTION_NAME}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL}
      - CHAT_MODEL=${CHAT_MODEL}
      - OLLAMA_URL=${OLLAMA_URL}
      - MAX_CHUNK_SIZE=${MAX_CHUNK_SIZE}
      - SWAGGER_URL=${SWAGGER_URL}
      - API_URL=${API_URL}
      - FLASK_APP=${FLASK_APP}
      - FLASK_RUN_HOST=${FLASK_RUN_HOST}
    restart: unless-stopped

  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    restart: unless-stopped

  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: chroma
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma
    restart: unless-stopped
    environment:
      - CHROMADB_TELEMETRY_ENABLED=false

  mongo:
    image: mongo
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    env_file:
      - .env
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
      - ME_CONFIG_MONGODB_SERVER=${ME_CONFIG_MONGODB_SERVER}
      - ME_CONFIG_MONGODB_AUTH_DATABASE=${ME_CONFIG_MONGODB_AUTH_DATABASE}
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=${ME_CONFIG_MONGODB_ENABLE_ADMIN}
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
    depends_on:
      - mongo
    restart: unless-stopped

volumes:
  ollama_models:
  chroma_data:
  mongo_data:
